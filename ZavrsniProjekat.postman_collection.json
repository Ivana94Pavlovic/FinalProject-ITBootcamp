{
	"info": {
		"_postman_id": "5576d205-bd6e-48bc-a2d6-a9120081bf92",
		"name": "ZavrsniProjekat",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26815073"
	},
	"item": [
		{
			"name": "Account",
			"item": [
				{
					"name": "New user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get('validUsername'));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{validUsername}}\",\r\n  \"password\": \"{{validPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/Account/v1/User",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User"
							]
						}
					},
					"response": []
				},
				{
					"name": "New token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Text contains string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"User authorized successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{validUsername}}\",\r\n  \"password\": \"{{validPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/Account/v1/GenerateToken",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"GenerateToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "User authorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"true\");\r",
									"});\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userName\": \"{{validUsername}}\",\r\n  \"password\": \"{{validPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/Account/v1/Authorized",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"Authorized"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user with ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get('validUsername'));\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{testUrl}}/Account/v1/User/{{validId}}",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"{{validId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 400ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{testUrl}}/Account/v1/User/{{validId}}",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"Account",
								"v1",
								"User",
								"{{validId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookstore",
			"item": [
				{
					"name": "All books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Learning JavaScript Design Patterns\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Books",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single book - ISBN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify title matches\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.title).to.eql(\"Git Pocket Guide\");\r",
									"});\r",
									"\r",
									"pm.test(\"Number of pages\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.pages).to.eql(234);\r",
									"});\r",
									"pm.test(\"Verify author\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.author).to.eql(\"Richard E. Silverman\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Book?ISBN=9781449325862",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Book"
							],
							"query": [
								{
									"key": "ISBN",
									"value": "9781449325862",
									"description": "9781449325862"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"ISBN check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"9781593275846\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{validId}}\",\r\n  \"collectionOfIsbns\": [\r\n    {\r\n      \"isbn\": \"9781593275846\"\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Books",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{validId}}\",\r\n  \"isbn\": \"{{replace book}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Books/{{first added book}}",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books",
								"{{first added book}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete single book",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 300ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isbn\": \"{{fifth added book}}\",\r\n  \"userId\": \"{{validId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Books",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete all books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{testUrl}}/BookStore/v1/Books?validId=4ed3c2cb-8071-40b3-b202-2b3bbebe2b69",
							"host": [
								"{{testUrl}}"
							],
							"path": [
								"BookStore",
								"v1",
								"Books"
							],
							"query": [
								{
									"key": "validId",
									"value": "4ed3c2cb-8071-40b3-b202-2b3bbebe2b69",
									"description": "4ed3c2cb-8071-40b3-b202-2b3bbebe2b69"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{validToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "validUsername",
			"value": "Sebastian1",
			"type": "string"
		},
		{
			"key": "validPassword",
			"value": "Vanica*994",
			"type": "string"
		},
		{
			"key": "validId",
			"value": "66bb06e3-d42f-4aff-aa26-5d2c3f7c9804",
			"type": "string"
		},
		{
			"key": "validToken",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyTmFtZSI6IlNlYmFzdGlhbjEiLCJwYXNzd29yZCI6IlZhbmljYSo5OTQiLCJpYXQiOjE2ODc1MTMzMzB9.iY1UuPim_Y0n3Yp9ckvn6YSVKxg96YqH_EEFAWI8E2A",
			"type": "string"
		},
		{
			"key": "replace book",
			"value": "9781449331818",
			"type": "string"
		},
		{
			"key": "first added book",
			"value": "9781449325862",
			"type": "string"
		},
		{
			"key": "second added book",
			"value": "9781449337711",
			"type": "string"
		},
		{
			"key": "third added book",
			"value": "9781449365035",
			"type": "string"
		},
		{
			"key": "fourth added book",
			"value": "9781491904244",
			"type": "string"
		},
		{
			"key": "fifth added book",
			"value": "9781491950296",
			"type": "string"
		},
		{
			"key": "sixth added book",
			"value": "9781593275846",
			"type": "string"
		}
	]
}